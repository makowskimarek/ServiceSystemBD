#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BizzLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Service_System_DB")]
	public partial class ServiceSystemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACT_DICT(ACT_DICT instance);
    partial void UpdateACT_DICT(ACT_DICT instance);
    partial void DeleteACT_DICT(ACT_DICT instance);
    partial void InsertACTIVITY(ACTIVITY instance);
    partial void UpdateACTIVITY(ACTIVITY instance);
    partial void DeleteACTIVITY(ACTIVITY instance);
    partial void InsertADRES(ADRES instance);
    partial void UpdateADRES(ADRES instance);
    partial void DeleteADRES(ADRES instance);
    partial void InsertOBJ_TYPE(OBJ_TYPE instance);
    partial void UpdateOBJ_TYPE(OBJ_TYPE instance);
    partial void DeleteOBJ_TYPE(OBJ_TYPE instance);
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    partial void InsertOBJECT(OBJECT instance);
    partial void UpdateOBJECT(OBJECT instance);
    partial void DeleteOBJECT(OBJECT instance);
    partial void InsertPERSONEL(PERSONEL instance);
    partial void UpdatePERSONEL(PERSONEL instance);
    partial void DeletePERSONEL(PERSONEL instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertREQUEST(REQUEST instance);
    partial void UpdateREQUEST(REQUEST instance);
    partial void DeleteREQUEST(REQUEST instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    #endregion
		
		public ServiceSystemDataContext() : 
				base(global::BizzLayer.Properties.Settings.Default.Service_System_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceSystemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceSystemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceSystemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceSystemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACT_DICT> ACT_DICT
		{
			get
			{
				return this.GetTable<ACT_DICT>();
			}
		}
		
		public System.Data.Linq.Table<ACTIVITY> ACTIVITY
		{
			get
			{
				return this.GetTable<ACTIVITY>();
			}
		}
		
		public System.Data.Linq.Table<ADRES> ADRES
		{
			get
			{
				return this.GetTable<ADRES>();
			}
		}
		
		public System.Data.Linq.Table<OBJ_TYPE> OBJ_TYPE
		{
			get
			{
				return this.GetTable<OBJ_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENT
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
		
		public System.Data.Linq.Table<OBJECT> OBJECT
		{
			get
			{
				return this.GetTable<OBJECT>();
			}
		}
		
		public System.Data.Linq.Table<PERSONEL> PERSONEL
		{
			get
			{
				return this.GetTable<PERSONEL>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patient
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<REQUEST> REQUEST
		{
			get
			{
				return this.GetTable<REQUEST>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visit
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACT_DICT")]
	public partial class ACT_DICT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _act_type;
		
		private string _act_name;
		
		private EntitySet<ACTIVITY> _ACTIVITY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onact_typeChanging(string value);
    partial void Onact_typeChanged();
    partial void Onact_nameChanging(string value);
    partial void Onact_nameChanged();
    #endregion
		
		public ACT_DICT()
		{
			this._ACTIVITY = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITY), new Action<ACTIVITY>(this.detach_ACTIVITY));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string act_name
		{
			get
			{
				return this._act_name;
			}
			set
			{
				if ((this._act_name != value))
				{
					this.Onact_nameChanging(value);
					this.SendPropertyChanging();
					this._act_name = value;
					this.SendPropertyChanged("act_name");
					this.Onact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACT_DICT_ACTIVITY", Storage="_ACTIVITY", ThisKey="act_type", OtherKey="act_type")]
		public EntitySet<ACTIVITY> ACTIVITY
		{
			get
			{
				return this._ACTIVITY;
			}
			set
			{
				this._ACTIVITY.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.ACT_DICT = this;
		}
		
		private void detach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.ACT_DICT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACTIVITY")]
	public partial class ACTIVITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_act;
		
		private int _id_req;
		
		private int _id_wrk;
		
		private string _act_type;
		
		private int _seq_no;
		
		private string _descr;
		
		private string _result;
		
		private string _status;
		
		private System.DateTime _dt_req;
		
		private System.Nullable<System.DateTime> _dt_fin_cancel;
		
		private EntityRef<ACT_DICT> _ACT_DICT;
		
		private EntityRef<PERSONEL> _PERSONEL;
		
		private EntityRef<REQUEST> _REQUEST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_actChanging(int value);
    partial void Onid_actChanged();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void Onid_wrkChanging(int value);
    partial void Onid_wrkChanged();
    partial void Onact_typeChanging(string value);
    partial void Onact_typeChanged();
    partial void Onseq_noChanging(int value);
    partial void Onseq_noChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Ondt_reqChanging(System.DateTime value);
    partial void Ondt_reqChanged();
    partial void Ondt_fin_cancelChanging(System.Nullable<System.DateTime> value);
    partial void Ondt_fin_cancelChanged();
    #endregion
		
		public ACTIVITY()
		{
			this._ACT_DICT = default(EntityRef<ACT_DICT>);
			this._PERSONEL = default(EntityRef<PERSONEL>);
			this._REQUEST = default(EntityRef<REQUEST>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_act", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_act
		{
			get
			{
				return this._id_act;
			}
			set
			{
				if ((this._id_act != value))
				{
					this.Onid_actChanging(value);
					this.SendPropertyChanging();
					this._id_act = value;
					this.SendPropertyChanged("id_act");
					this.Onid_actChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", DbType="Int NOT NULL")]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					if (this._REQUEST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_wrk", DbType="Int NOT NULL")]
		public int id_wrk
		{
			get
			{
				return this._id_wrk;
			}
			set
			{
				if ((this._id_wrk != value))
				{
					if (this._PERSONEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_wrkChanging(value);
					this.SendPropertyChanging();
					this._id_wrk = value;
					this.SendPropertyChanged("id_wrk");
					this.Onid_wrkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					if (this._ACT_DICT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq_no", DbType="Int NOT NULL")]
		public int seq_no
		{
			get
			{
				return this._seq_no;
			}
			set
			{
				if ((this._seq_no != value))
				{
					this.Onseq_noChanging(value);
					this.SendPropertyChanging();
					this._seq_no = value;
					this.SendPropertyChanged("seq_no");
					this.Onseq_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(250)")]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_req", DbType="DateTime NOT NULL")]
		public System.DateTime dt_req
		{
			get
			{
				return this._dt_req;
			}
			set
			{
				if ((this._dt_req != value))
				{
					this.Ondt_reqChanging(value);
					this.SendPropertyChanging();
					this._dt_req = value;
					this.SendPropertyChanged("dt_req");
					this.Ondt_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_fin_cancel", DbType="DateTime")]
		public System.Nullable<System.DateTime> dt_fin_cancel
		{
			get
			{
				return this._dt_fin_cancel;
			}
			set
			{
				if ((this._dt_fin_cancel != value))
				{
					this.Ondt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._dt_fin_cancel = value;
					this.SendPropertyChanged("dt_fin_cancel");
					this.Ondt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACT_DICT_ACTIVITY", Storage="_ACT_DICT", ThisKey="act_type", OtherKey="act_type", IsForeignKey=true)]
		public ACT_DICT ACT_DICT
		{
			get
			{
				return this._ACT_DICT.Entity;
			}
			set
			{
				ACT_DICT previousValue = this._ACT_DICT.Entity;
				if (((previousValue != value) 
							|| (this._ACT_DICT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACT_DICT.Entity = null;
						previousValue.ACTIVITY.Remove(this);
					}
					this._ACT_DICT.Entity = value;
					if ((value != null))
					{
						value.ACTIVITY.Add(this);
						this._act_type = value.act_type;
					}
					else
					{
						this._act_type = default(string);
					}
					this.SendPropertyChanged("ACT_DICT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_ACTIVITY", Storage="_PERSONEL", ThisKey="id_wrk", OtherKey="id_pers", IsForeignKey=true)]
		public PERSONEL PERSONEL
		{
			get
			{
				return this._PERSONEL.Entity;
			}
			set
			{
				PERSONEL previousValue = this._PERSONEL.Entity;
				if (((previousValue != value) 
							|| (this._PERSONEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONEL.Entity = null;
						previousValue.ACTIVITY.Remove(this);
					}
					this._PERSONEL.Entity = value;
					if ((value != null))
					{
						value.ACTIVITY.Add(this);
						this._id_wrk = value.id_pers;
					}
					else
					{
						this._id_wrk = default(int);
					}
					this.SendPropertyChanged("PERSONEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ACTIVITY", Storage="_REQUEST", ThisKey="id_req", OtherKey="id_req", IsForeignKey=true)]
		public REQUEST REQUEST
		{
			get
			{
				return this._REQUEST.Entity;
			}
			set
			{
				REQUEST previousValue = this._REQUEST.Entity;
				if (((previousValue != value) 
							|| (this._REQUEST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUEST.Entity = null;
						previousValue.ACTIVITY.Remove(this);
					}
					this._REQUEST.Entity = value;
					if ((value != null))
					{
						value.ACTIVITY.Add(this);
						this._id_req = value.id_req;
					}
					else
					{
						this._id_req = default(int);
					}
					this.SendPropertyChanged("REQUEST");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADRES")]
	public partial class ADRES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cli;
		
		private string _nation;
		
		private string _city;
		
		private string _post_code;
		
		private string _street;
		
		private EntityRef<CLIENT> _CLIENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void OnnationChanging(string value);
    partial void OnnationChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onpost_codeChanging(string value);
    partial void Onpost_codeChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    #endregion
		
		public ADRES()
		{
			this._CLIENT = default(EntityRef<CLIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nation
		{
			get
			{
				return this._nation;
			}
			set
			{
				if ((this._nation != value))
				{
					this.OnnationChanging(value);
					this.SendPropertyChanging();
					this._nation = value;
					this.SendPropertyChanged("nation");
					this.OnnationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_code", DbType="NChar(5)")]
		public string post_code
		{
			get
			{
				return this._post_code;
			}
			set
			{
				if ((this._post_code != value))
				{
					this.Onpost_codeChanging(value);
					this.SendPropertyChanging();
					this._post_code = value;
					this.SendPropertyChanged("post_code");
					this.Onpost_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_ADRES", Storage="_CLIENT", ThisKey="id_cli", OtherKey="id_client", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.ADRES = null;
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.ADRES = this;
						this._id_cli = value.id_client;
					}
					else
					{
						this._id_cli = default(int);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJ_TYPE")]
	public partial class OBJ_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _code_type;
		
		private string _name_type;
		
		private EntitySet<OBJECT> _OBJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncode_typeChanging(string value);
    partial void Oncode_typeChanged();
    partial void Onname_typeChanging(string value);
    partial void Onname_typeChanged();
    #endregion
		
		public OBJ_TYPE()
		{
			this._OBJECT = new EntitySet<OBJECT>(new Action<OBJECT>(this.attach_OBJECT), new Action<OBJECT>(this.detach_OBJECT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name_type
		{
			get
			{
				return this._name_type;
			}
			set
			{
				if ((this._name_type != value))
				{
					this.Onname_typeChanging(value);
					this.SendPropertyChanging();
					this._name_type = value;
					this.SendPropertyChanged("name_type");
					this.Onname_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJ_TYPE_OBJECT", Storage="_OBJECT", ThisKey="code_type", OtherKey="code_type")]
		public EntitySet<OBJECT> OBJECT
		{
			get
			{
				return this._OBJECT;
			}
			set
			{
				this._OBJECT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.OBJ_TYPE = this;
		}
		
		private void detach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.OBJ_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENT")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_client;
		
		private string _name;
		
		private string _fname;
		
		private string _lname;
		
		private int _tel;
		
		private EntityRef<ADRES> _ADRES;
		
		private EntitySet<OBJECT> _OBJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_clientChanging(int value);
    partial void Onid_clientChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OntelChanging(int value);
    partial void OntelChanged();
    #endregion
		
		public CLIENT()
		{
			this._ADRES = default(EntityRef<ADRES>);
			this._OBJECT = new EntitySet<OBJECT>(new Action<OBJECT>(this.attach_OBJECT), new Action<OBJECT>(this.detach_OBJECT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_client", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_client
		{
			get
			{
				return this._id_client;
			}
			set
			{
				if ((this._id_client != value))
				{
					this.Onid_clientChanging(value);
					this.SendPropertyChanging();
					this._id_client = value;
					this.SendPropertyChanged("id_client");
					this.Onid_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="Int NOT NULL")]
		public int tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_ADRES", Storage="_ADRES", ThisKey="id_client", OtherKey="id_cli", IsUnique=true, IsForeignKey=false)]
		public ADRES ADRES
		{
			get
			{
				return this._ADRES.Entity;
			}
			set
			{
				ADRES previousValue = this._ADRES.Entity;
				if (((previousValue != value) 
							|| (this._ADRES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADRES.Entity = null;
						previousValue.CLIENT = null;
					}
					this._ADRES.Entity = value;
					if ((value != null))
					{
						value.CLIENT = this;
					}
					this.SendPropertyChanged("ADRES");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OBJECT", Storage="_OBJECT", ThisKey="id_client", OtherKey="id_cli")]
		public EntitySet<OBJECT> OBJECT
		{
			get
			{
				return this._OBJECT;
			}
			set
			{
				this._OBJECT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECT")]
	public partial class OBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nr_obj;
		
		private int _id_cli;
		
		private string _code;
		
		private string _code_type;
		
		private EntitySet<REQUEST> _REQUEST;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<OBJ_TYPE> _OBJ_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnr_objChanging(int value);
    partial void Onnr_objChanged();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Oncode_typeChanging(string value);
    partial void Oncode_typeChanged();
    #endregion
		
		public OBJECT()
		{
			this._REQUEST = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUEST), new Action<REQUEST>(this.detach_REQUEST));
			this._CLIENT = default(EntityRef<CLIENT>);
			this._OBJ_TYPE = default(EntityRef<OBJ_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_obj", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int nr_obj
		{
			get
			{
				return this._nr_obj;
			}
			set
			{
				if ((this._nr_obj != value))
				{
					this.Onnr_objChanging(value);
					this.SendPropertyChanging();
					this._nr_obj = value;
					this.SendPropertyChanged("nr_obj");
					this.Onnr_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", DbType="Int NOT NULL")]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NChar(10)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					if (this._OBJ_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECT_REQUEST", Storage="_REQUEST", ThisKey="nr_obj", OtherKey="nr_obj")]
		public EntitySet<REQUEST> REQUEST
		{
			get
			{
				return this._REQUEST;
			}
			set
			{
				this._REQUEST.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OBJECT", Storage="_CLIENT", ThisKey="id_cli", OtherKey="id_client", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.OBJECT.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.OBJECT.Add(this);
						this._id_cli = value.id_client;
					}
					else
					{
						this._id_cli = default(int);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJ_TYPE_OBJECT", Storage="_OBJ_TYPE", ThisKey="code_type", OtherKey="code_type", IsForeignKey=true)]
		public OBJ_TYPE OBJ_TYPE
		{
			get
			{
				return this._OBJ_TYPE.Entity;
			}
			set
			{
				OBJ_TYPE previousValue = this._OBJ_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._OBJ_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJ_TYPE.Entity = null;
						previousValue.OBJECT.Remove(this);
					}
					this._OBJ_TYPE.Entity = value;
					if ((value != null))
					{
						value.OBJECT.Add(this);
						this._code_type = value.code_type;
					}
					else
					{
						this._code_type = default(string);
					}
					this.SendPropertyChanged("OBJ_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.OBJECT = this;
		}
		
		private void detach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.OBJECT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONEL")]
	public partial class PERSONEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pers;
		
		private string _fname;
		
		private string _lname;
		
		private string _role;
		
		private string _username;
		
		private string _pass;
		
		private System.DateTime _dt_retire;
		
		private EntitySet<ACTIVITY> _ACTIVITY;
		
		private EntitySet<REQUEST> _REQUEST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void Ondt_retireChanging(System.DateTime value);
    partial void Ondt_retireChanged();
    #endregion
		
		public PERSONEL()
		{
			this._ACTIVITY = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITY), new Action<ACTIVITY>(this.detach_ACTIVITY));
			this._REQUEST = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUEST), new Action<REQUEST>(this.detach_REQUEST));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_retire", DbType="DateTime NOT NULL")]
		public System.DateTime dt_retire
		{
			get
			{
				return this._dt_retire;
			}
			set
			{
				if ((this._dt_retire != value))
				{
					this.Ondt_retireChanging(value);
					this.SendPropertyChanging();
					this._dt_retire = value;
					this.SendPropertyChanged("dt_retire");
					this.Ondt_retireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_ACTIVITY", Storage="_ACTIVITY", ThisKey="id_pers", OtherKey="id_wrk")]
		public EntitySet<ACTIVITY> ACTIVITY
		{
			get
			{
				return this._ACTIVITY;
			}
			set
			{
				this._ACTIVITY.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_REQUEST", Storage="_REQUEST", ThisKey="id_pers", OtherKey="id_man")]
		public EntitySet<REQUEST> REQUEST
		{
			get
			{
				return this._REQUEST;
			}
			set
			{
				this._REQUEST.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = this;
		}
		
		private void detach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = null;
		}
		
		private void attach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = this;
		}
		
		private void detach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPatient;
		
		private string _FirstName;
		
		private string _LastName;
		
		private EntitySet<Visit> _Visit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPatientChanging(int value);
    partial void OnIdPatientChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public Patient()
		{
			this._Visit = new EntitySet<Visit>(new Action<Visit>(this.attach_Visit), new Action<Visit>(this.detach_Visit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPatient", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPatient
		{
			get
			{
				return this._IdPatient;
			}
			set
			{
				if ((this._IdPatient != value))
				{
					this.OnIdPatientChanging(value);
					this.SendPropertyChanging();
					this._IdPatient = value;
					this.SendPropertyChanged("IdPatient");
					this.OnIdPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Visit", Storage="_Visit", ThisKey="IdPatient", OtherKey="IdPatient")]
		public EntitySet<Visit> Visit
		{
			get
			{
				return this._Visit;
			}
			set
			{
				this._Visit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Visit(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Visit(Visit entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REQUEST")]
	public partial class REQUEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_req;
		
		private int _nr_obj;
		
		private int _id_man;
		
		private string _descr;
		
		private string _result;
		
		private string _status;
		
		private System.DateTime _dt_req;
		
		private System.Nullable<System.DateTime> _dt_fin_cancel;
		
		private EntitySet<ACTIVITY> _ACTIVITY;
		
		private EntityRef<OBJECT> _OBJECT;
		
		private EntityRef<PERSONEL> _PERSONEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void Onnr_objChanging(int value);
    partial void Onnr_objChanged();
    partial void Onid_manChanging(int value);
    partial void Onid_manChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Ondt_reqChanging(System.DateTime value);
    partial void Ondt_reqChanged();
    partial void Ondt_fin_cancelChanging(System.Nullable<System.DateTime> value);
    partial void Ondt_fin_cancelChanged();
    #endregion
		
		public REQUEST()
		{
			this._ACTIVITY = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITY), new Action<ACTIVITY>(this.detach_ACTIVITY));
			this._OBJECT = default(EntityRef<OBJECT>);
			this._PERSONEL = default(EntityRef<PERSONEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_obj", DbType="Int NOT NULL")]
		public int nr_obj
		{
			get
			{
				return this._nr_obj;
			}
			set
			{
				if ((this._nr_obj != value))
				{
					if (this._OBJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnr_objChanging(value);
					this.SendPropertyChanging();
					this._nr_obj = value;
					this.SendPropertyChanged("nr_obj");
					this.Onnr_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_man", DbType="Int NOT NULL")]
		public int id_man
		{
			get
			{
				return this._id_man;
			}
			set
			{
				if ((this._id_man != value))
				{
					if (this._PERSONEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_manChanging(value);
					this.SendPropertyChanging();
					this._id_man = value;
					this.SendPropertyChanged("id_man");
					this.Onid_manChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(250)")]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_req", DbType="DateTime NOT NULL")]
		public System.DateTime dt_req
		{
			get
			{
				return this._dt_req;
			}
			set
			{
				if ((this._dt_req != value))
				{
					this.Ondt_reqChanging(value);
					this.SendPropertyChanging();
					this._dt_req = value;
					this.SendPropertyChanged("dt_req");
					this.Ondt_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_fin_cancel", DbType="DateTime")]
		public System.Nullable<System.DateTime> dt_fin_cancel
		{
			get
			{
				return this._dt_fin_cancel;
			}
			set
			{
				if ((this._dt_fin_cancel != value))
				{
					this.Ondt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._dt_fin_cancel = value;
					this.SendPropertyChanged("dt_fin_cancel");
					this.Ondt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ACTIVITY", Storage="_ACTIVITY", ThisKey="id_req", OtherKey="id_req")]
		public EntitySet<ACTIVITY> ACTIVITY
		{
			get
			{
				return this._ACTIVITY;
			}
			set
			{
				this._ACTIVITY.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECT_REQUEST", Storage="_OBJECT", ThisKey="nr_obj", OtherKey="nr_obj", IsForeignKey=true)]
		public OBJECT OBJECT
		{
			get
			{
				return this._OBJECT.Entity;
			}
			set
			{
				OBJECT previousValue = this._OBJECT.Entity;
				if (((previousValue != value) 
							|| (this._OBJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECT.Entity = null;
						previousValue.REQUEST.Remove(this);
					}
					this._OBJECT.Entity = value;
					if ((value != null))
					{
						value.REQUEST.Add(this);
						this._nr_obj = value.nr_obj;
					}
					else
					{
						this._nr_obj = default(int);
					}
					this.SendPropertyChanged("OBJECT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_REQUEST", Storage="_PERSONEL", ThisKey="id_man", OtherKey="id_pers", IsForeignKey=true)]
		public PERSONEL PERSONEL
		{
			get
			{
				return this._PERSONEL.Entity;
			}
			set
			{
				PERSONEL previousValue = this._PERSONEL.Entity;
				if (((previousValue != value) 
							|| (this._PERSONEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONEL.Entity = null;
						previousValue.REQUEST.Remove(this);
					}
					this._PERSONEL.Entity = value;
					if ((value != null))
					{
						value.REQUEST.Add(this);
						this._id_man = value.id_pers;
					}
					else
					{
						this._id_man = default(int);
					}
					this.SendPropertyChanged("PERSONEL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = this;
		}
		
		private void detach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVisit;
		
		private string _Description;
		
		private string _Diagnosis;
		
		private int _IdPatient;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVisitChanging(int value);
    partial void OnIdVisitChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDiagnosisChanging(string value);
    partial void OnDiagnosisChanged();
    partial void OnIdPatientChanging(int value);
    partial void OnIdPatientChanged();
    #endregion
		
		public Visit()
		{
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVisit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVisit
		{
			get
			{
				return this._IdVisit;
			}
			set
			{
				if ((this._IdVisit != value))
				{
					this.OnIdVisitChanging(value);
					this.SendPropertyChanging();
					this._IdVisit = value;
					this.SendPropertyChanged("IdVisit");
					this.OnIdVisitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(254) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnosis", DbType="NVarChar(254)")]
		public string Diagnosis
		{
			get
			{
				return this._Diagnosis;
			}
			set
			{
				if ((this._Diagnosis != value))
				{
					this.OnDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._Diagnosis = value;
					this.SendPropertyChanged("Diagnosis");
					this.OnDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPatient", DbType="Int NOT NULL")]
		public int IdPatient
		{
			get
			{
				return this._IdPatient;
			}
			set
			{
				if ((this._IdPatient != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPatientChanging(value);
					this.SendPropertyChanging();
					this._IdPatient = value;
					this.SendPropertyChanged("IdPatient");
					this.OnIdPatientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Visit", Storage="_Patient", ThisKey="IdPatient", OtherKey="IdPatient", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Visit.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Visit.Add(this);
						this._IdPatient = value.IdPatient;
					}
					else
					{
						this._IdPatient = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
